package project;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 *
 * @author Dric
 */
public class ForgotPassword extends javax.swing.JFrame {

    private final Main main;
    private boolean validUsername;
    private boolean canChangePassword;
    private String qsec_answer;

    /**
     * Creates new form LogIn
     *
     * @param main
     */
    public ForgotPassword(Main main) {
        this.main = main;
        validUsername = false;
        canChangePassword = false;
        initComponents();

        setBackground(new Color(0, 0, 0, 0));
        WindowUtils.setTransparentFrame(panelHeader);
        WindowUtils.initMoving(ForgotPassword.this, panelHeader);

        WindowUtils.setTransparentFrame(fieldUsername);
        WindowUtils.setTransparentFrame(comboSecurityQuestion);
        WindowUtils.setTransparentFrame(fieldSecurityAnswer);
        WindowUtils.setTransparentFrame(fieldPassword);
        WindowUtils.setTransparentFrame(fieldConfirmPassword);

        fieldUsername.getDocument().addDocumentListener(new FieldChangeListener());
        fieldPassword.getDocument().addDocumentListener(new FieldChangeListener());
        fieldConfirmPassword.getDocument().addDocumentListener(new FieldChangeListener());

        loginFieldsRefresh();
    }

    private void loginFieldsRefresh() {
        if (canChangePassword) {
            labelSecurityQuestion.setText("Password");
            //labelSecurityQuestion.setVisible(false);
            comboSecurityQuestion.setVisible(false);
            labelSecurityAnswer.setVisible(false);
            fieldSecurityAnswer.setVisible(false);
            separatorSecurityAnswer.setVisible(false);

            btnNext.setVisible(false);
            btnNextAgain.setVisible(false);

            //labelPassword.setVisible(true);
            fieldPassword.setVisible(true);
            separatorPassword.setVisible(true);
            labelConfirmPassword.setVisible(true);
            fieldConfirmPassword.setVisible(true);
            separatorConfirmPassword.setVisible(true);
            btnLogInProceed.setVisible(true);
        } else {
            labelSecurityQuestion.setText("Security Question");
            labelSecurityQuestion.setVisible(validUsername);
            comboSecurityQuestion.setVisible(validUsername);
            labelSecurityAnswer.setVisible(validUsername);
            fieldSecurityAnswer.setVisible(validUsername);
            separatorSecurityAnswer.setVisible(validUsername);

            btnNext.setVisible(!validUsername);
            btnNextAgain.setVisible(validUsername);

            labelPassword.setVisible(false);
            fieldPassword.setVisible(false);
            separatorPassword.setVisible(false);
            labelConfirmPassword.setVisible(false);
            fieldConfirmPassword.setVisible(false);
            separatorConfirmPassword.setVisible(false);
            btnLogInProceed.setVisible(false);
        }
    }

    private class FieldChangeListener implements DocumentListener, ActionListener {

        @Override
        public void insertUpdate(DocumentEvent e) {
            checkFields();
        }

        @Override
        public void removeUpdate(DocumentEvent e) {
            checkFields();
        }

        @Override
        public void changedUpdate(DocumentEvent e) {
            checkFields();
        }

        @Override
        public void actionPerformed(ActionEvent e) {
            checkFields();
        }

        private void checkFields() {
            String user_name = fieldUsername.getText().trim();
            String user_password = new String(fieldPassword.getPassword()).trim();
            String confirm_Password = new String(fieldConfirmPassword.getPassword()).trim();

            boolean isValid = !user_name.isEmpty()
                    && !user_name.equals("Enter Username")
                    && !user_password.isEmpty()
                    && !user_password.equals("Enter Password")
                    && !confirm_Password.isEmpty()
                    && !confirm_Password.equals("Enter Password");
            btnLogInProceed.setEnabled(isValid);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelLogIn = new project.component.GradientPanel();
        panelHeader = new javax.swing.JPanel();
        labelTitle = new javax.swing.JLabel();
        btnClose = new javax.swing.JButton();
        btnLogIn = new javax.swing.JButton();
        labelUsername = new javax.swing.JLabel();
        fieldUsername = new javax.swing.JTextField();
        separatorUsername = new javax.swing.JSeparator();
        labelSecurityQuestion = new javax.swing.JLabel();
        comboSecurityQuestion = new javax.swing.JComboBox<>();
        labelSecurityAnswer = new javax.swing.JLabel();
        fieldSecurityAnswer = new javax.swing.JTextField();
        separatorSecurityAnswer = new javax.swing.JSeparator();
        btnNext = new javax.swing.JButton();
        btnNextAgain = new javax.swing.JButton();
        separatorPassword = new javax.swing.JSeparator();
        labelConfirmPassword = new javax.swing.JLabel();
        fieldConfirmPassword = new javax.swing.JPasswordField();
        labelPassword = new javax.swing.JLabel();
        separatorConfirmPassword = new javax.swing.JSeparator();
        fieldPassword = new javax.swing.JPasswordField();
        btnLogInProceed = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Account");
        setAlwaysOnTop(true);
        setUndecorated(true);

        panelHeader.setBackground(new java.awt.Color(0, 0, 0));
        panelHeader.setOpaque(false);

        labelTitle.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        labelTitle.setForeground(new java.awt.Color(255, 255, 255));
        labelTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelTitle.setText("Forgot Password");

        btnClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project/gfx/interface/cross.png"))); // NOI18N
        btnClose.setBorder(null);
        btnClose.setContentAreaFilled(false);
        btnClose.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelHeaderLayout = new javax.swing.GroupLayout(panelHeader);
        panelHeader.setLayout(panelHeaderLayout);
        panelHeaderLayout.setHorizontalGroup(
            panelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelHeaderLayout.createSequentialGroup()
                .addContainerGap(64, Short.MAX_VALUE)
                .addComponent(labelTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(btnClose)
                .addContainerGap())
        );
        panelHeaderLayout.setVerticalGroup(
            panelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelHeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnClose)
                    .addComponent(labelTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnLogIn.setFont(new java.awt.Font("Segoe UI Historic", 1, 18)); // NOI18N
        btnLogIn.setForeground(new java.awt.Color(255, 255, 255));
        btnLogIn.setText("Go Back to Log In");
        btnLogIn.setContentAreaFilled(false);
        btnLogIn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLogIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogInActionPerformed(evt);
            }
        });

        labelUsername.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        labelUsername.setForeground(new java.awt.Color(255, 255, 255));
        labelUsername.setText("Username");

        fieldUsername.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 12)); // NOI18N
        fieldUsername.setForeground(new java.awt.Color(153, 153, 153));
        fieldUsername.setText("Enter Username");
        fieldUsername.setBorder(null);
        fieldUsername.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        fieldUsername.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                fieldUsernameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                fieldUsernameFocusLost(evt);
            }
        });

        labelSecurityQuestion.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        labelSecurityQuestion.setForeground(new java.awt.Color(255, 255, 255));
        labelSecurityQuestion.setText("Security Question");

        comboSecurityQuestion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "What was your dream job as a child?", "What is the name of the first book you ever read?", "What was your favorite subject in high school?", "What was the first concert you ever attended?", "What is the first song you learned all the lyrics to?" }));
        comboSecurityQuestion.setBorder(null);
        comboSecurityQuestion.setEnabled(false);
        comboSecurityQuestion.setFocusable(false);

        labelSecurityAnswer.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        labelSecurityAnswer.setForeground(new java.awt.Color(255, 255, 255));
        labelSecurityAnswer.setText("Security Answer");

        fieldSecurityAnswer.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 12)); // NOI18N
        fieldSecurityAnswer.setForeground(new java.awt.Color(153, 153, 153));
        fieldSecurityAnswer.setText("Enter Answer");
        fieldSecurityAnswer.setToolTipText("");
        fieldSecurityAnswer.setBorder(null);
        fieldSecurityAnswer.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        fieldSecurityAnswer.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                fieldSecurityAnswerFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                fieldSecurityAnswerFocusLost(evt);
            }
        });

        btnNext.setBackground(javax.swing.UIManager.getDefaults().getColor("Actions.Yellow"));
        btnNext.setText("Next");
        btnNext.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnNextAgain.setBackground(javax.swing.UIManager.getDefaults().getColor("Actions.Yellow"));
        btnNextAgain.setText("Next Again");
        btnNextAgain.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNextAgain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextAgainActionPerformed(evt);
            }
        });

        labelConfirmPassword.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        labelConfirmPassword.setForeground(new java.awt.Color(255, 255, 255));
        labelConfirmPassword.setText("Confirm Password");

        fieldConfirmPassword.setForeground(new java.awt.Color(153, 153, 153));
        fieldConfirmPassword.setText("Enter Password");
        fieldConfirmPassword.setBorder(null);
        fieldConfirmPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                fieldConfirmPasswordFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                fieldConfirmPasswordFocusLost(evt);
            }
        });

        labelPassword.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N
        labelPassword.setForeground(new java.awt.Color(255, 255, 255));
        labelPassword.setText("Password");

        fieldPassword.setForeground(new java.awt.Color(153, 153, 153));
        fieldPassword.setText("Enter Password");
        fieldPassword.setBorder(null);
        fieldPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                fieldPasswordFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                fieldPasswordFocusLost(evt);
            }
        });

        btnLogInProceed.setBackground(javax.swing.UIManager.getDefaults().getColor("Actions.Yellow"));
        btnLogInProceed.setText("Change Password and Log In");
        btnLogInProceed.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLogInProceed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogInProceedActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelLogInLayout = new javax.swing.GroupLayout(panelLogIn);
        panelLogIn.setLayout(panelLogInLayout);
        panelLogInLayout.setHorizontalGroup(
            panelLogInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(panelLogInLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnLogIn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(panelLogInLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(panelLogInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnNextAgain, javax.swing.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)
                    .addComponent(labelUsername, javax.swing.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)
                    .addComponent(fieldUsername, javax.swing.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)
                    .addComponent(labelSecurityQuestion, javax.swing.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)
                    .addComponent(comboSecurityQuestion, 0, 326, Short.MAX_VALUE)
                    .addComponent(labelSecurityAnswer, javax.swing.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)
                    .addComponent(fieldSecurityAnswer, javax.swing.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)
                    .addComponent(separatorSecurityAnswer, javax.swing.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)
                    .addComponent(btnNext, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(separatorUsername, javax.swing.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)
                    .addComponent(fieldConfirmPassword)
                    .addComponent(separatorConfirmPassword)
                    .addComponent(fieldPassword)
                    .addComponent(separatorPassword, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnLogInProceed, javax.swing.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)
                    .addComponent(labelPassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelConfirmPassword, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        panelLogInLayout.setVerticalGroup(
            panelLogInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLogInLayout.createSequentialGroup()
                .addComponent(panelHeader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(btnLogIn, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(labelUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(fieldUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addComponent(separatorUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNext)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelSecurityQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboSecurityQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addComponent(labelSecurityAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(fieldSecurityAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(separatorSecurityAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNextAgain)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelPassword)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fieldPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(separatorPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelConfirmPassword)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fieldConfirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(separatorConfirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLogInProceed)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelLogIn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelLogIn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        dispose();
    }//GEN-LAST:event_btnCloseActionPerformed

    private void fieldUsernameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fieldUsernameFocusGained
        if (fieldUsername.getText().equals("Enter Username")) {
            fieldUsername.setText("");
            fieldUsername.setForeground(new Color(255, 255, 255));
        }
        validUsername = false;
        canChangePassword = false;
        loginFieldsRefresh();
    }//GEN-LAST:event_fieldUsernameFocusGained

    private void fieldUsernameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fieldUsernameFocusLost
        if (fieldUsername.getText().equals("")) {
            fieldUsername.setText("Enter Username");
            fieldUsername.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_fieldUsernameFocusLost

    private void fieldSecurityAnswerFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fieldSecurityAnswerFocusGained
        if (fieldSecurityAnswer.getText().equals("Enter Answer")) {
            fieldSecurityAnswer.setText("");
            fieldSecurityAnswer.setForeground(new Color(255, 255, 255));
        }
    }//GEN-LAST:event_fieldSecurityAnswerFocusGained

    private void fieldSecurityAnswerFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fieldSecurityAnswerFocusLost
        if (fieldSecurityAnswer.getText().equals("")) {
            fieldSecurityAnswer.setText("Enter Answer");
            fieldSecurityAnswer.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_fieldSecurityAnswerFocusLost

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        String user_name = fieldUsername.getText();

        String query = "SELECT user_name, user_qsec_index, user_qsec_answer FROM EmployeeTB WHERE user_name = ?";

        try (Connection conn = Queries.getConnection(Main.dbName_Employee); PreparedStatement stmt = Queries.prepareQueryWithParameters(conn, query, user_name); ResultSet rs = stmt.executeQuery()) {

            if (rs.next()) {
                validUsername = true;
                loginFieldsRefresh();

                int user_qsec_index = rs.getInt("user_qsec_index");
                qsec_answer = rs.getString("user_qsec_answer");
                comboSecurityQuestion.setSelectedIndex(user_qsec_index);
            } else {
                JOptionPane.showMessageDialog(this, "No such username exists!", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Database error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace(System.out);
        }
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnLogInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogInActionPerformed
        new LogIn(main).setVisible(true);
        dispose();
    }//GEN-LAST:event_btnLogInActionPerformed

    private void btnNextAgainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextAgainActionPerformed
        if (qsec_answer.equals(fieldSecurityAnswer.getText())) {
            canChangePassword = true;
            loginFieldsRefresh();
        } else {
            JOptionPane.showMessageDialog(this, "Wrong Answer!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnNextAgainActionPerformed

    private void fieldConfirmPasswordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fieldConfirmPasswordFocusGained
        if (fieldConfirmPassword.getText().equals("Enter Password")) {
            fieldConfirmPassword.setText("");
            fieldConfirmPassword.setForeground(new Color(255, 255, 255));
        }
    }//GEN-LAST:event_fieldConfirmPasswordFocusGained

    private void fieldConfirmPasswordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fieldConfirmPasswordFocusLost
        if (fieldConfirmPassword.getText().equals("")) {
            fieldConfirmPassword.setText("Enter Password");
            fieldConfirmPassword.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_fieldConfirmPasswordFocusLost

    private void fieldPasswordFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fieldPasswordFocusGained
        if (fieldPassword.getText().equals("Enter Password")) {
            fieldPassword.setText("");
            fieldPassword.setForeground(new Color(255, 255, 255));
        }
    }//GEN-LAST:event_fieldPasswordFocusGained

    private void fieldPasswordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fieldPasswordFocusLost
        if (fieldPassword.getText().equals("")) {
            fieldPassword.setText("Enter Password");
            fieldPassword.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_fieldPasswordFocusLost

    private void btnLogInProceedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogInProceedActionPerformed
        String user_name = fieldUsername.getText().trim();
        String user_password = new String(fieldPassword.getPassword()).trim();
        String confirm_Password = new String(fieldConfirmPassword.getPassword()).trim();

        if (!user_password.equals(confirm_Password)) {
            JOptionPane.showMessageDialog(this, "Passwords do not match.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String query = "UPDATE EmployeeTB SET user_password = ? WHERE user_name = ?";

        try (Connection conn = Queries.getConnection(Main.dbName_Employee); PreparedStatement stmt = Queries.prepareQueryWithParameters(conn, query, user_password, user_name)) {

            int rowsAffected = stmt.executeUpdate();

            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(this, "Password Update Successful! Logging In.", "Success", JOptionPane.INFORMATION_MESSAGE);

                String selectQuery = "SELECT ID FROM EmployeeTB WHERE user_name = ?";
                try (PreparedStatement selectStmt = Queries.prepareQueryWithParameters(conn, selectQuery, user_name); ResultSet rs = selectStmt.executeQuery()) {

                    if (rs.next()) {
                        int userID = rs.getInt("ID");
                        main.setUserSessionID(userID);
                        main.updateUserSession();
                        dispose();
                    }
                }

            } else {
                JOptionPane.showMessageDialog(this, "Invalid Username or Password!", "Error", JOptionPane.ERROR_MESSAGE);
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Database error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace(System.out);
        }
    }//GEN-LAST:event_btnLogInProceedActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ForgotPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ForgotPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ForgotPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ForgotPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnLogIn;
    private javax.swing.JButton btnLogInProceed;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnNextAgain;
    private javax.swing.JComboBox<String> comboSecurityQuestion;
    private javax.swing.JPasswordField fieldConfirmPassword;
    private javax.swing.JPasswordField fieldPassword;
    private javax.swing.JTextField fieldSecurityAnswer;
    private javax.swing.JTextField fieldUsername;
    private javax.swing.JLabel labelConfirmPassword;
    private javax.swing.JLabel labelPassword;
    private javax.swing.JLabel labelSecurityAnswer;
    private javax.swing.JLabel labelSecurityQuestion;
    private javax.swing.JLabel labelTitle;
    private javax.swing.JLabel labelUsername;
    private javax.swing.JPanel panelHeader;
    private project.component.GradientPanel panelLogIn;
    private javax.swing.JSeparator separatorConfirmPassword;
    private javax.swing.JSeparator separatorPassword;
    private javax.swing.JSeparator separatorSecurityAnswer;
    private javax.swing.JSeparator separatorUsername;
    // End of variables declaration//GEN-END:variables
}
